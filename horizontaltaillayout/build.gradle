apply plugin: 'com.android.library'

/*

define in local.properties these variables:

bintray.user=[BINTRAY_USERNAME]
bintray.apikey=[BINTRAY_API_KEY]
bintray.gpg.password=[DEPENDS_WHETHER_GPG_AUTO_SIGNING_KEY_HAS_A_PASSPHRASE]

developer.id=[USERNAME]
developer.name=[FULL_NAME]
developer.email=[EMAIL]

*/

ext {
    LIB_VERSION = '1.0.0'

    bintrayRepo = 'maven'
    bintrayName = 'android-horizontal-tail-layout'

    publishedGroupId = 'com.github.bosphere'
    libraryName = 'Android-HorizontalTailLayout'
    artifact = 'android-horizontaltaillayout'

    libraryDescription = 'A simple implementation of a custom layout which solves the issues of grouping a child view with its tailing views.'

    siteUrl = 'https://github.com/bosphere/Android-HorizontalTailLayout'
    gitUrl = 'https://github.com/bosphere/Android-HorizontalTailLayout.git'

    libraryVersion = "$LIB_VERSION"

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    developerId = properties.getProperty('developer.id')
    developerName = properties.getProperty('developer.name')
    developerEmail = properties.getProperty('developer.email')

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.0'
}

///////////////////////////////////////////////////////////////////////////////////////////

apply plugin: 'com.github.dcendents.android-maven'

group = publishedGroupId                               // Maven Group ID for the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

///////////////////////////////////////////////////////////////////////////////////////////

apply plugin: 'com.jfrog.bintray'

version = libraryVersion

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}

///////////////////////////////////////////////////////////////////////////////////////////